import os
import requests
import telebot  # ‚úÖ –≠—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

BINANCE_API_KEY = os.getenv("BINANCE_API_KEY")

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ç–æ–∫–µ–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã
if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")

# Binance API
BINANCE_API_URL = "https://api2.binance.com/api/v3/ticker/price"
COINS = ["BTCUSDT", "ETHUSDT", "SOLUSDT"]

bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

def get_crypto_prices():
    prices = {}
    for coin in COINS:
        try:
            response = requests.get(f"{BINANCE_API_URL}?symbol={coin}", timeout=5)
            response.raise_for_status()
            data = response.json()
            prices[coin] = float(data["price"])
        except requests.exceptions.RequestException as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ {coin}: {e}")
    return prices

def send_crypto_update():
    prices = get_crypto_prices()
    if not prices:
        bot.send_message(TELEGRAM_CHAT_ID, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å Binance.")
        return

    message = "\n".join([f"{coin}: {price} USDT" for coin, price in prices.items()])
    bot.send_message(TELEGRAM_CHAT_ID, f"üìä *–ö—Ä–∏–ø—Ç–æ—Å–≤–æ–¥–∫–∞:*\n\n{message}", parse_mode="Markdown")

if __name__ == "__main__":
    send_crypto_update()
